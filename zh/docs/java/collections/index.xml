<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>集合框架 on Endless River</title><link>https://wangy325.github.io/zh/docs/java/collections/</link><description>Recent content in 集合框架 on Endless River</description><generator>Hugo</generator><language>zh</language><atom:link href="https://wangy325.github.io/zh/docs/java/collections/index.xml" rel="self" type="application/rss+xml"/><item><title>List列表</title><link>https://wangy325.github.io/zh/docs/java/collections/1_List/</link><pubDate>Wed, 29 Apr 2020 00:00:00 +0000</pubDate><guid>https://wangy325.github.io/zh/docs/java/collections/1_List/</guid><description>&lt;h1 id="list列表">
 List列表
 &lt;a class="anchor" href="#list%e5%88%97%e8%a1%a8">#&lt;/a>
&lt;/h1>
&lt;p>
 &lt;img src="https://wangy325.github.io/img/Collection.png" alt="JXUL1s.png" />&lt;/p>
&lt;p style="text-align:center;font-style:italic;font-size:.9rem">Java集合框架简图&lt;/p>
&lt;!-- > 1. 未列出枚举集（EnumSet/EnumMap）
> 2. 未列出IdentityHashMap
> 3. 未列出java.util.concurrent包下的实现 -->
&lt;p>上图列出了集合框架的常见实现，Java集合框架系列文章介绍了图中列出的大部分内容&lt;/p></description></item><item><title>Queue</title><link>https://wangy325.github.io/zh/docs/java/collections/2_Queue/</link><pubDate>Sat, 02 May 2020 00:00:00 +0000</pubDate><guid>https://wangy325.github.io/zh/docs/java/collections/2_Queue/</guid><description>&lt;h1 id="queue队列">
 Queue队列
 &lt;a class="anchor" href="#queue%e9%98%9f%e5%88%97">#&lt;/a>
&lt;/h1>
&lt;p>Queue（队列），实际开发过程中，在单线程环境下使用的情况下不多，Queue作为集合框架中重要组成似乎习惯性被忽略，队列总是先持有元素，再处理元素&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>。&lt;/p>
&lt;p>
 &lt;img src="https://wangy325.github.io/img/Queue.png" alt="J7NBrQ.png" />&lt;/p>
&lt;p style="text-align:center;font-size:.9rem;font-style:italic">Queue继承关系简图&lt;/p></description></item><item><title>Set</title><link>https://wangy325.github.io/zh/docs/java/collections/3_Set/</link><pubDate>Wed, 06 May 2020 00:00:00 +0000</pubDate><guid>https://wangy325.github.io/zh/docs/java/collections/3_Set/</guid><description>&lt;h1 id="set集">
 Set集
 &lt;a class="anchor" href="#set%e9%9b%86">#&lt;/a>
&lt;/h1>
&lt;p>Set是&lt;strong>不含重复元素的集&lt;/strong>，严格来讲，Set不允许当&lt;code>e1.equals(e2)&lt;/code>为真时， &lt;em>e1&lt;/em> 和 &lt;em>e2&lt;/em> 同时出现在集合中。Set最多允许一个&lt;code>null&lt;/code>元素。&lt;/p>
&lt;p>将&lt;strong>可变对象&lt;/strong>置入Set时需要特别小心，当对象的改动影响到了元素之间的&lt;code>equals()&lt;/code>比较的结果，那么Set的行为就变得不确定了。因此，&lt;strong>不能将Set本身作为Set的元素&lt;/strong>。&lt;/p></description></item><item><title>Java集合框架之Map</title><link>https://wangy325.github.io/zh/docs/java/collections/4_Map/</link><pubDate>Sun, 10 May 2020 00:00:00 +0000</pubDate><guid>https://wangy325.github.io/zh/docs/java/collections/4_Map/</guid><description>&lt;h1 id="map映射">
 Map映射
 &lt;a class="anchor" href="#map%e6%98%a0%e5%b0%84">#&lt;/a>
&lt;/h1>
&lt;p>Map即映射，即键-值对，键不允许重复，并且一个键最多映射一个值。Map不在Java集合框架的范畴，但是其由集合框架的内容实现。自然也在集合框架的讨论之内。&lt;/p>
&lt;p>映射提供3种&lt;strong>集合视图&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>键集 （Set实现）&lt;/li>
&lt;li>值集 （Collection实现）&lt;/li>
&lt;li>Map.Entry集（Set实现）&lt;/li>
&lt;/ul></description></item><item><title>Collections工具类</title><link>https://wangy325.github.io/zh/docs/java/collections/5_Collections/</link><pubDate>Tue, 12 May 2020 00:00:00 +0000</pubDate><guid>https://wangy325.github.io/zh/docs/java/collections/5_Collections/</guid><description>&lt;h1 id="collections工具类">
 Collections工具类
 &lt;a class="anchor" href="#collections%e5%b7%a5%e5%85%b7%e7%b1%bb">#&lt;/a>
&lt;/h1>
&lt;p>集合框架中一个重要的类，其实是Collection接口的&lt;strong>伴随类&lt;/strong>，其中定义了许多实用方法，用来获取&lt;strong>集合视图&lt;/strong>，或提供一些方便的操作集合元素的&lt;strong>算法&lt;/strong>。&lt;/p>
&lt;p>由于视图是直接封装的Collection接口，&lt;strong>因此其方法有些局限&lt;/strong>，并且由于特殊的设计，部分操作是不允许的（会抛出 &lt;em>UnsupportedOperationExceptin&lt;/em> ）。&lt;/p></description></item><item><title>HashMap的源码分析</title><link>https://wangy325.github.io/zh/docs/java/collections/6_HashMap%E7%9A%84%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</link><pubDate>Thu, 24 Sep 2020 00:00:00 +0000</pubDate><guid>https://wangy325.github.io/zh/docs/java/collections/6_HashMap%E7%9A%84%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</guid><description>&lt;h1 id="hashmap的源码分析">
 HashMap的源码分析
 &lt;a class="anchor" href="#hashmap%e7%9a%84%e6%ba%90%e7%a0%81%e5%88%86%e6%9e%90">#&lt;/a>
&lt;/h1>
&lt;p>HashMap基于散列表，散列表中每一个Node节点（桶）是链表，当两个条目（entry）的key的hash值对桶数（capacity）取模的值相等时，这两个entry会存储在同一个链表中。但当链表中元素达到一定数目时，链表结构会转变为&lt;strong>树结构&lt;/strong>。&lt;/p>
&lt;blockquote>
&lt;p>此文中没有讨论HashMap中涉及到树结构的源码。&lt;/p>
&lt;/blockquote></description></item></channel></rss>
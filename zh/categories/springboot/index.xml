<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>SpringBoot on EndlessRiver</title><link>https://wangy325.github.io/zh/categories/springboot/</link><description>Recent content in SpringBoot on EndlessRiver</description><generator>Hugo -- gohugo.io</generator><language>zh</language><managingEditor>wangy325@qq.com (wangy325)</managingEditor><webMaster>wangy325@qq.com (wangy325)</webMaster><copyright>&amp;copy;2019-{year}, All Rights Reserved</copyright><lastBuildDate>Sat, 20 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://wangy325.github.io/zh/categories/springboot/index.xml" rel="self" type="application/rss+xml"/><item><title>在SpringBoot中使用MessageSource</title><link>https://wangy325.github.io/zh/posts/java/spring/use-springboot-messagesource/</link><pubDate>Sat, 20 Feb 2021 00:00:00 +0000</pubDate><author>wangy325@qq.com (wangy325)</author><atom:modified>Thu, 08 Apr 2021 22:37:47 +0800</atom:modified><guid>https://wangy325.github.io/zh/posts/java/spring/use-springboot-messagesource/</guid><description>&lt;blockquote>
&lt;p>&lt;span id="hook">几个说明&lt;/span>：&lt;/p>
&lt;ol>
&lt;li>&lt;del>properties配置文件中，&lt;code>spring.messages.basename&lt;/code>&lt;strong>必须&lt;/strong>要加classpath前缀。如 &lt;code>spring.messages.basename=classpath:i18n/messages&lt;/code>&lt;/del>；&lt;/li>
&lt;li>&lt;del>必须要手动配置&lt;code>MessageSource&lt;/code>，springboot不会自动配置之&lt;/del>；&lt;/li>
&lt;li>如果使用&lt;code>MessageSource.getMessage()&lt;/code>方法，第一个参数的引用形式为&lt;code>&amp;quot;code&amp;quot;&lt;/code>，而不是&lt;code>&amp;quot;{code}&amp;quot;&lt;/code>或者&lt;code>&amp;quot;${code}&amp;quot;&lt;/code>。如messageSource.getMessage(&amp;ldquo;test.msg&amp;rdquo;, null, &lt;del>Locale.getDefault()&lt;/del>)；&lt;/li>
&lt;li>在配置&lt;code>LocalValidatorFactoryBean&lt;/code>之后，才可以在&lt;code>javax.validation.constraints&lt;/code>包下的注解（&lt;code>@Size&lt;/code>，&lt;code>@NotNull&lt;/code>&amp;hellip;）下的&lt;em>&lt;strong>message&lt;/strong>&lt;/em>属性中使用&lt;code>&amp;quot;{code}&amp;quot;&lt;/code>的形式声明校验提示信息。如&lt;br />
&lt;code>@NotNull(message = &amp;quot;{leftTime.not.null}&amp;quot;)&lt;/code>；&lt;/li>
&lt;li>springMVC的locale配置和JVM的locale配置不一样，在application.properties中配置的&lt;code>spring.mvc.locale=zh_CN&lt;/code>实际上配置的是&lt;code>WebMvcProperties&lt;/code>，在获取消息时，locale信息应该使用&lt;code>webMvcProperties.getLocale()&lt;/code>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>获取&lt;strong>而不是&lt;/strong>使用&lt;code>Locale.getDefault()&lt;/code>获取。&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;hr />
&lt;h2 id="1-概览">1 概览&lt;/h2>
&lt;p>MessageSource is a powerful feature available in Spring applications. This helps application developers handle various complex scenarios with writing much extra code, such as environment-specific configuration, internationalization or configurable values.&lt;/p>
&lt;p>One more scenario could be modifying the default validation messages to more user-friendly/custom messages.&lt;/p>
&lt;p>In this tutorial, we&amp;rsquo;ll see how to configure and manage custom validation MessageSource in the application using Spring Boot.&lt;/p></description><dc:creator>wangy325</dc:creator><category>MessageSource</category><category>i18n</category><category>SpringBoot</category></item><item><title>在SpringBoot项目中使用MockMvc进行接口测试</title><link>https://wangy325.github.io/zh/posts/java/spring/%E5%9C%A8springboot%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8mockmvc%E8%BF%9B%E8%A1%8C%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/</link><pubDate>Sun, 07 Feb 2021 00:00:00 +0000</pubDate><author>wangy325@qq.com (wangy325)</author><atom:modified>Wed, 12 Jun 2024 10:20:19 +0000</atom:modified><guid>https://wangy325.github.io/zh/posts/java/spring/%E5%9C%A8springboot%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8mockmvc%E8%BF%9B%E8%A1%8C%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/</guid><description>&lt;p>现在流行在项目中使用&lt;a href="https://swagger.io">swagger&lt;/a>对接口进行测试，这确实很方便、直观。&lt;/p>
&lt;p>但是MockMvc作为spring-test包中指定的测试框架，在没有使用swagger的项目中，使用其进行测试是很好的选择。&lt;/p></description><dc:creator>wangy325</dc:creator><category>mockito</category><category>单元测试</category><category>SpringBoot</category></item><item><title>SpringBoot使用AOP的简单示例</title><link>https://wangy325.github.io/zh/posts/java/spring/springboot-aop-demo/</link><pubDate>Sat, 14 Mar 2020 00:00:00 +0000</pubDate><author>wangy325@qq.com (wangy325)</author><atom:modified>Thu, 08 Apr 2021 22:37:47 +0800</atom:modified><guid>https://wangy325.github.io/zh/posts/java/spring/springboot-aop-demo/</guid><description>&lt;p>有一个cd接口，其实体类用于播放歌曲，同时我们想在播放歌曲的时候记录每个曲目的播放次数。看起来，记录次数这个事和播放曲目是不相干的事情，当然，我们可以在每首歌曲播放完成之后记录，但是更好的办法是使用一个切面，切入到播放方法中，来完成这件事，这样可以减少无关逻辑对代码的侵入。&lt;/p>
&lt;p>此程序分别使用了基于@Aspect注解和基于XML配置文件2种方式进行了切面注入，2种方式效果是等同的。&lt;/p>
&lt;p>此程序使用的是Spring AOP，并没有使用功能更加丰富的AspectJ，Spring AOP很大部分借鉴了AspectJ，如果只是简单的方法层面的织入，那么Spring AOP就能够满足需求。如果需要构造器或者属性拦截，或者需要为spring bean引入新方法，那么就需要使用AspectJ了。&lt;/p>
&lt;h1 id="1-开始">1 开始&lt;/h1>
&lt;p>从&lt;a href="https://start.spring.io">start.spring.io&lt;/a>下载空项目，引入Spring AOP依赖：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework.boot&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>spring-boot-starter-aop&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description><dc:creator>wangy325</dc:creator><category>AOP</category><category>SpringBoot</category></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>Queue on EndlessRiver</title><link>https://wangy325.github.io/zh/tags/queue/</link><description>Recent content in Queue on EndlessRiver</description><generator>Hugo -- gohugo.io</generator><language>zh</language><managingEditor>wangy325@qq.com (wangy325)</managingEditor><webMaster>wangy325@qq.com (wangy325)</webMaster><copyright>&amp;copy;2019-{year}, All Rights Reserved</copyright><lastBuildDate>Sat, 02 May 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://wangy325.github.io/zh/tags/queue/index.xml" rel="self" type="application/rss+xml"/><item><title>Queue</title><link>https://wangy325.github.io/zh/posts/java/collections/queue/</link><pubDate>Sat, 02 May 2020 00:00:00 +0000</pubDate><author>wangy325@qq.com (wangy325)</author><atom:modified>Thu, 01 Jul 2021 17:27:52 +0800</atom:modified><guid>https://wangy325.github.io/zh/posts/java/collections/queue/</guid><description>&lt;p>Queue（队列），实际开发过程中，在单线程环境下使用的情况下不多，Queue作为集合框架中重要组成似乎习惯性被忽略，队列总是先持有元素，再处理元素&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>。&lt;/p>
&lt;p>&lt;img src="https://wangy325.github.io/img/Queue.png" alt="J7NBrQ.png" />&lt;/p>
&lt;p style="text-align:center;font-size:.9rem;font-style:italic">Queue继承关系简图&lt;/p>
&lt;p>除了Collection定义的操作之外，Queue定义了额外的插入/删除/检查元素的操作，这些操作有2种形式：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th align="center">&lt;/th>
&lt;th align="center">&lt;em>Throws Exception&lt;/em>&lt;/th>
&lt;th align="center">&lt;em>Returns special value&lt;/em>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td align="center">&lt;strong>Insert&lt;/strong>&lt;/td>
&lt;td align="center">add(e)&lt;/td>
&lt;td align="center">offer(e)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center">&lt;strong>Remove&lt;/strong>&lt;/td>
&lt;td align="center">remove()&lt;/td>
&lt;td align="center">poll()&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center">&lt;strong>Examine&lt;/strong>&lt;/td>
&lt;td align="center">element()&lt;/td>
&lt;td align="center">peek()&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>如表所示，add/remove/element方法失败后抛出异常。offer/poll/peek方法失败后返回一个特殊值（null或false，视具体操作不同），需要说明的是，&lt;del>&lt;code>offer()&lt;/code>方法主要是为有容量限制的队列设计的&lt;/del> 对于有限队列而言，&lt;code>offer()&lt;/code>方法比&lt;code>add()&lt;/code>方法更可取。&lt;/p></description><dc:creator>wangy325</dc:creator><category>集合框架</category><category>Queue</category><category>java</category></item></channel></rss>
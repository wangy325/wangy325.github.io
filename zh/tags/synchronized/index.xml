<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>synchronized on EndlessRiver</title><link>https://wangy325.github.io/zh/tags/synchronized/</link><description>Recent content in synchronized on EndlessRiver</description><generator>Hugo -- gohugo.io</generator><language>zh</language><managingEditor>wangy325@qq.com (wangy325)</managingEditor><webMaster>wangy325@qq.com (wangy325)</webMaster><copyright>&amp;copy;2019-{year}, All Rights Reserved</copyright><lastBuildDate>Wed, 20 May 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://wangy325.github.io/zh/tags/synchronized/index.xml" rel="self" type="application/rss+xml"/><item><title>Java并发系列之2——资源访问受限</title><link>https://wangy325.github.io/zh/posts/java/concurrency/2%E8%B5%84%E6%BA%90%E8%AE%BF%E9%97%AE%E5%8F%97%E9%99%90/</link><pubDate>Wed, 20 May 2020 00:00:00 +0000</pubDate><author>wangy325@qq.com (wangy325)</author><atom:modified>Sun, 19 Jun 2022 06:05:34 +0000</atom:modified><guid>https://wangy325.github.io/zh/posts/java/concurrency/2%E8%B5%84%E6%BA%90%E8%AE%BF%E9%97%AE%E5%8F%97%E9%99%90/</guid><description>&lt;p>在&lt;a href="../1%E7%BA%BF%E7%A8%8B%E4%B8%8E%E4%BB%BB%E5%8A%A1">上一篇文章&lt;/a>中，虽然创建了多线程，并且线程之间出现了一些&lt;strong>不可预测&lt;/strong>的CPU调度，但是由于线程之间是&lt;strong>相互隔离&lt;/strong>的——&lt;strong>线程没有访问共同的资源&lt;/strong>，尽管在执行任务的过程可能被CPU剥夺运行权，但是当它们再次获得运行权时对运行结果并没有影响，它们是安全的。&lt;/p>
&lt;blockquote>
&lt;p>实际上，上篇文章通过&lt;code>join()&lt;/code>方法演示了一种安全访问共享资源的方法。&lt;/p>
&lt;/blockquote>
&lt;p>考虑一种情况，如果&lt;strong>多个线程访问同一资源&lt;/strong>，并对资源内容进行修改，会发生什么情况？&lt;/p>
&lt;p>对于&lt;strong>非原子性&lt;/strong>操作，多线程下会出现&lt;strong>竞争条件&lt;/strong>。例如，对于操作&lt;code>accounts[to] += amount&lt;/code>，可以被拆分为多个CPU指令：&lt;/p>
&lt;ol>
&lt;li>加载accounts[to]到寄存器&lt;/li>
&lt;li>增加amount&lt;/li>
&lt;li>将结果写回acounts[to]&lt;/li>
&lt;/ol>
&lt;p>上述3个步骤中，线程执行到&lt;strong>任一步骤&lt;/strong>时都可能被剥夺运行权。&lt;/p></description><dc:creator>wangy325</dc:creator><category>锁</category><category>synchronized</category><category>volatile</category><category>并发</category></item></channel></rss>